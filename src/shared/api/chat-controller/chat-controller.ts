/**
 * Generated by orval v7.0.1 üç∫
 * Do not edit manually.
 * Webchat REST API
 * Webchat application
 * OpenAPI spec version: 3.0
 */
import type {
  AddChatRoleDTO,
  AddMemberRoleDTO,
  ChatCreatedDTO,
  ChatMemberDTO,
  CreateChatDTO,
  DeleteMemberRoleDTO,
  GetChatMembersParams,
  JoinChatDTO,
  LeaveChatDTO
} from '.././model'
import { customInstance } from '.././custom-instance';


type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


  /**
 * Adds an existing role to a member
 */
export const addMemberRole = (
    addMemberRoleDTO: AddMemberRoleDTO,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/v1/chat/role`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: addMemberRoleDTO
    },
      options);
    }
  /**
 * Adds a new role to a chat
 */
export const addChatRole = (
    addChatRoleDTO: AddChatRoleDTO,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<string>(
      {url: `/api/v1/chat/role`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addChatRoleDTO
    },
      options);
    }
  /**
 * Deletes a custom role from member, leaves him with default
 */
export const deleteMemberRole = (
    deleteMemberRoleDTO: DeleteMemberRoleDTO,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/v1/chat/role`, method: 'DELETE',
      headers: {'Content-Type': 'application/json', },
      data: deleteMemberRoleDTO
    },
      options);
    }
  /**
 * Creates a chat
 */
export const createChat = (
    createChatDTO: CreateChatDTO,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<ChatCreatedDTO>(
      {url: `/api/v1/chat`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createChatDTO
    },
      options);
    }
  /**
 * Adds a member to a chat
 */
export const joinChat = (
    joinChatDTO: JoinChatDTO,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/v1/chat/join`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: joinChatDTO
    },
      options);
    }
  /**
 * Gets all members in a chat
 */
export const getChatMembers = (
    id: string,
    params?: GetChatMembersParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<ChatMemberDTO[]>(
      {url: `/api/v1/chat/${id}/members`, method: 'GET',
        params
    },
      options);
    }
  /**
 * Deletes a chat
 */
export const deleteChat = (
    id: string,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/v1/chat/${id}`, method: 'DELETE'
    },
      options);
    }
  /**
 * Removes a member from a chat
 */
export const leaveChat = (
    leaveChatDTO: LeaveChatDTO,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/api/v1/chat/leave`, method: 'DELETE',
      headers: {'Content-Type': 'application/json', },
      data: leaveChatDTO
    },
      options);
    }
  export type AddMemberRoleResult = NonNullable<Awaited<ReturnType<typeof addMemberRole>>>
export type AddChatRoleResult = NonNullable<Awaited<ReturnType<typeof addChatRole>>>
export type DeleteMemberRoleResult = NonNullable<Awaited<ReturnType<typeof deleteMemberRole>>>
export type CreateChatResult = NonNullable<Awaited<ReturnType<typeof createChat>>>
export type JoinChatResult = NonNullable<Awaited<ReturnType<typeof joinChat>>>
export type GetChatMembersResult = NonNullable<Awaited<ReturnType<typeof getChatMembers>>>
export type DeleteChatResult = NonNullable<Awaited<ReturnType<typeof deleteChat>>>
export type LeaveChatResult = NonNullable<Awaited<ReturnType<typeof leaveChat>>>
